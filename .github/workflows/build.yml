name: Run build
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 5"

env:
  VCONAN_VER: 1.59.0
  # Would be nice if this value was set automagically when client-cpp is released and consumed everywhere
  VCLIENT_CPP_VER: 1.4.0
  VCONAN_BRANCH_VERSION: "True"
  # recipe should usually pull from 'main' but can be changed to a branch name if recipe changes are pending
  VCONAN_RECIPE_VER: main
jobs:

  run-build-windows:
    # pin runner version to 2019
    runs-on: windows-2019
    env:
      VBUILDRELEASE: Release
      VBUILDDEBUG: Debug
      VBUILDMODE: Release
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Conan
        run: pip3 install conan==${{ env.VCONAN_VER }} --force

      - name: Check out client-conan recipe
        uses: actions/checkout@v3
        with:
          repository: opentdf/client-conan
          ref: ${{ env.VCONAN_RECIPE_VER }}
          path: client-conan

      - name: Get client-cpp into conan local cache, built from repo if necessary
        run: |
          cd ${{ github.workspace }}
          cd client-conan
          conan create recipe/all opentdf-client/${{ env.VCLIENT_CPP_VER }}@ -pr:b=default --build=opentdf-client --build=missing -o opentdf-client:branch_version=${{ env.VCONAN_BRANCH_VERSION }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Run build
        run: |
          cd ${{ github.workspace }}
          .\build-all.bat

      # The windows-specific GITHUB_ENV set is not documented, and it's different than unix flavors.  Must use '$env:GITHUB_ENV'
      # Ref: https://stackoverflow.com/questions/61858388/how-do-i-set-an-enviroment-variable-in-github-action-on-a-windows-server
      - name: Get Version
        run: |
          chcp 65001 #set code page to utf-8
          $V_VER = Get-Content .\VERSION
          echo "V_VERSION=$V_VER" >> $env:GITHUB_ENV

      - name: Get Timestamp
        run : |
          $V_TSTAMP = Get-Date((Get-Date).toUniversalTime()) -Format "yyyyMMddHHmmss"
          echo "V_TIMESTAMP=$V_TSTAMP" >> $env:GITHUB_ENV

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-csharp-${{ env.V_VERSION }}-${{ env.V_TIMESTAMP }}
          path: |
            *.zip
            *.nupkg

      - run: echo "This job's status is %job.status%."

  ci:
    needs:
      - run-build-windows
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
