name: Run build on push
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 5"

env:
  CONAN_VER: 1.54.0
jobs:

  run-build-windows:
    runs-on: windows-2019
    env:
      VBUILDRELEASE: Release
      VBUILDDEBUG: Debug
      VBUILDMODE: Release
    outputs:
      version: ${{ steps.getversion.outputs.version }}
    steps:
      - run: echo "üéâ The job was automatically triggered by a %github.event_name% event."
      - run: echo "üêß This job is now running on a %runner.os% server hosted by GitHub!"
      - run: echo "üîé The name of your branch is %github.ref% and your repository is %github.repository%."

      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The %github.repository% repository has been cloned to the runner."

      - name: Install Conan
        run: pip3 install conan==${{ env.CONAN_VER }} --force

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Run build
        run: |
          cd ${{ github.workspace }}
          .\build-all.bat

      - name: Get Version
        run: |
          chcp 65001 #set code page to utf-8
          $VER = Get-Content .\VERSION
          echo "VERSION=$VER" >> $env:GITHUB_ENV
          echo "VERSION=$VER" 
      - run: echo "${{ env.VERSION }}"
      - run: echo $env:VERSION

      - run: echo "The version is ${{ env.VERSION }}"

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output.${{ env.VERSION }}.zip
          path: |
            *.zip
            *.nupkg

      - run: echo "üçè This job's status is %job.status%."

  ci:
    needs:
      - run-build-windows
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
